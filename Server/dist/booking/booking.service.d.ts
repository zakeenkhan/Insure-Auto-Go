import { UpdateBookingDto } from './dto/update-booking.dto';
import { Prisma } from '@prisma/client';
import { PrismaService } from 'src/prisma/prisma.service';
import { GetBookingDto } from './dto/get-booking.dto';
export declare class BookingService {
    private prisma;
    constructor(prisma: PrismaService);
    create(createBookingDto: Prisma.BookingUncheckedCreateInput): Promise<{
        car: {
            id: number;
            name: string;
            ownerId: number;
            carPicture: string | null;
            carPublished: Date;
            city: string | null;
            registrationNo: string | null;
            type: string | null;
            makeYear: string | null;
            capacity: number | null;
            Make: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            insured: boolean | null;
            rentPerDay: number | null;
            insuranceRequired: boolean | null;
            carTransmission: import(".prisma/client").$Enums.CarTransmission | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            createdAt: Date;
            updatedAt: Date;
        };
        driver: {
            id: number;
            userId: number;
            licenseNo: string;
            licenseExpiry: Date;
            licensePicture: string | null;
            lisenceType: string | null;
            driverPicture: string | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            per12HoursRate: number | null;
            city: string | null;
            createdAt: Date;
            updatedAt: Date;
        };
        _count: {
            cancelledBy: number;
            client: number;
            car: number;
            driver: number;
            ratings: number;
        };
        cancelledBy: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        client: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        ratings: {
            id: number;
            ratedById: number;
            driverId: number | null;
            bookingId: number;
            carId: number;
            rating: Prisma.Decimal;
            review: string | null;
            createdAt: Date;
            updatedAt: Date;
        }[];
    } & {
        id: number;
        clientId: number;
        carId: number;
        driverId: number | null;
        status: import(".prisma/client").$Enums.BookingStatus;
        isInsured: boolean | null;
        insurance: string | null;
        bookingDate: Date;
        startDate: Date;
        endDate: Date;
        totalPrice: number;
        isPaid: boolean | null;
        amountPaid: number | null;
        cancelledAt: Date | null;
        cancelledById: number | null;
        clientContactNo: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    findAll(getBookingDto: GetBookingDto): Promise<{
        data: ({
            car: {
                id: number;
                name: string;
                ownerId: number;
                carPicture: string | null;
                carPublished: Date;
                city: string | null;
                registrationNo: string | null;
                type: string | null;
                makeYear: string | null;
                capacity: number | null;
                Make: string | null;
                fuelType: import(".prisma/client").$Enums.FuelType | null;
                insured: boolean | null;
                rentPerDay: number | null;
                insuranceRequired: boolean | null;
                carTransmission: import(".prisma/client").$Enums.CarTransmission | null;
                averageRating: Prisma.Decimal | null;
                ratingCount: number | null;
                weightage: Prisma.Decimal | null;
                createdAt: Date;
                updatedAt: Date;
            };
            driver: {
                id: number;
                userId: number;
                licenseNo: string;
                licenseExpiry: Date;
                licensePicture: string | null;
                lisenceType: string | null;
                driverPicture: string | null;
                averageRating: Prisma.Decimal | null;
                ratingCount: number | null;
                weightage: Prisma.Decimal | null;
                per12HoursRate: number | null;
                city: string | null;
                createdAt: Date;
                updatedAt: Date;
            };
            _count: {
                cancelledBy: number;
                client: number;
                car: number;
                driver: number;
                ratings: number;
            };
            cancelledBy: {
                id: number;
                fullName: string | null;
                email: string;
                password: string;
                isVerified: boolean;
                role: string;
                profilePicture: string | null;
                cnic: string | null;
                phone: string | null;
                dob: Date | null;
                otp: number | null;
                averageRatingGiven: Prisma.Decimal | null;
                ratingCount: number | null;
                weightage: Prisma.Decimal | null;
                cnicPhoto: string | null;
                isSignUpVerified: boolean;
                createdAt: Date;
                updatedAt: Date;
            };
            client: {
                id: number;
                fullName: string | null;
                email: string;
                password: string;
                isVerified: boolean;
                role: string;
                profilePicture: string | null;
                cnic: string | null;
                phone: string | null;
                dob: Date | null;
                otp: number | null;
                averageRatingGiven: Prisma.Decimal | null;
                ratingCount: number | null;
                weightage: Prisma.Decimal | null;
                cnicPhoto: string | null;
                isSignUpVerified: boolean;
                createdAt: Date;
                updatedAt: Date;
            };
            ratings: {
                id: number;
                ratedById: number;
                driverId: number | null;
                bookingId: number;
                carId: number;
                rating: Prisma.Decimal;
                review: string | null;
                createdAt: Date;
                updatedAt: Date;
            }[];
        } & {
            id: number;
            clientId: number;
            carId: number;
            driverId: number | null;
            status: import(".prisma/client").$Enums.BookingStatus;
            isInsured: boolean | null;
            insurance: string | null;
            bookingDate: Date;
            startDate: Date;
            endDate: Date;
            totalPrice: number;
            isPaid: boolean | null;
            amountPaid: number | null;
            cancelledAt: Date | null;
            cancelledById: number | null;
            clientContactNo: string | null;
            createdAt: Date;
            updatedAt: Date;
        })[];
        meta: {
            totalPages: number;
            totalRecords: number;
            currentPage: number;
        };
    }>;
    findOne(id: number): Promise<{
        car: {
            id: number;
            name: string;
            ownerId: number;
            carPicture: string | null;
            carPublished: Date;
            city: string | null;
            registrationNo: string | null;
            type: string | null;
            makeYear: string | null;
            capacity: number | null;
            Make: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            insured: boolean | null;
            rentPerDay: number | null;
            insuranceRequired: boolean | null;
            carTransmission: import(".prisma/client").$Enums.CarTransmission | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            createdAt: Date;
            updatedAt: Date;
        };
        driver: {
            id: number;
            userId: number;
            licenseNo: string;
            licenseExpiry: Date;
            licensePicture: string | null;
            lisenceType: string | null;
            driverPicture: string | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            per12HoursRate: number | null;
            city: string | null;
            createdAt: Date;
            updatedAt: Date;
        };
        _count: {
            cancelledBy: number;
            client: number;
            car: number;
            driver: number;
            ratings: number;
        };
        cancelledBy: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        client: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        ratings: {
            id: number;
            ratedById: number;
            driverId: number | null;
            bookingId: number;
            carId: number;
            rating: Prisma.Decimal;
            review: string | null;
            createdAt: Date;
            updatedAt: Date;
        }[];
    } & {
        id: number;
        clientId: number;
        carId: number;
        driverId: number | null;
        status: import(".prisma/client").$Enums.BookingStatus;
        isInsured: boolean | null;
        insurance: string | null;
        bookingDate: Date;
        startDate: Date;
        endDate: Date;
        totalPrice: number;
        isPaid: boolean | null;
        amountPaid: number | null;
        cancelledAt: Date | null;
        cancelledById: number | null;
        clientContactNo: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    update(userId: number, id: number, updateBookingDto: UpdateBookingDto): Promise<{
        car: {
            id: number;
            name: string;
            ownerId: number;
            carPicture: string | null;
            carPublished: Date;
            city: string | null;
            registrationNo: string | null;
            type: string | null;
            makeYear: string | null;
            capacity: number | null;
            Make: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            insured: boolean | null;
            rentPerDay: number | null;
            insuranceRequired: boolean | null;
            carTransmission: import(".prisma/client").$Enums.CarTransmission | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            createdAt: Date;
            updatedAt: Date;
        };
        driver: {
            id: number;
            userId: number;
            licenseNo: string;
            licenseExpiry: Date;
            licensePicture: string | null;
            lisenceType: string | null;
            driverPicture: string | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            per12HoursRate: number | null;
            city: string | null;
            createdAt: Date;
            updatedAt: Date;
        };
        _count: {
            cancelledBy: number;
            client: number;
            car: number;
            driver: number;
            ratings: number;
        };
        cancelledBy: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        client: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        ratings: {
            id: number;
            ratedById: number;
            driverId: number | null;
            bookingId: number;
            carId: number;
            rating: Prisma.Decimal;
            review: string | null;
            createdAt: Date;
            updatedAt: Date;
        }[];
    } & {
        id: number;
        clientId: number;
        carId: number;
        driverId: number | null;
        status: import(".prisma/client").$Enums.BookingStatus;
        isInsured: boolean | null;
        insurance: string | null;
        bookingDate: Date;
        startDate: Date;
        endDate: Date;
        totalPrice: number;
        isPaid: boolean | null;
        amountPaid: number | null;
        cancelledAt: Date | null;
        cancelledById: number | null;
        clientContactNo: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    cancel(user: any, id: number): Promise<{
        car: {
            id: number;
            name: string;
            ownerId: number;
            carPicture: string | null;
            carPublished: Date;
            city: string | null;
            registrationNo: string | null;
            type: string | null;
            makeYear: string | null;
            capacity: number | null;
            Make: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            insured: boolean | null;
            rentPerDay: number | null;
            insuranceRequired: boolean | null;
            carTransmission: import(".prisma/client").$Enums.CarTransmission | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            createdAt: Date;
            updatedAt: Date;
        };
        driver: {
            id: number;
            userId: number;
            licenseNo: string;
            licenseExpiry: Date;
            licensePicture: string | null;
            lisenceType: string | null;
            driverPicture: string | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            per12HoursRate: number | null;
            city: string | null;
            createdAt: Date;
            updatedAt: Date;
        };
        _count: {
            cancelledBy: number;
            client: number;
            car: number;
            driver: number;
            ratings: number;
        };
        cancelledBy: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        client: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        ratings: {
            id: number;
            ratedById: number;
            driverId: number | null;
            bookingId: number;
            carId: number;
            rating: Prisma.Decimal;
            review: string | null;
            createdAt: Date;
            updatedAt: Date;
        }[];
    } & {
        id: number;
        clientId: number;
        carId: number;
        driverId: number | null;
        status: import(".prisma/client").$Enums.BookingStatus;
        isInsured: boolean | null;
        insurance: string | null;
        bookingDate: Date;
        startDate: Date;
        endDate: Date;
        totalPrice: number;
        isPaid: boolean | null;
        amountPaid: number | null;
        cancelledAt: Date | null;
        cancelledById: number | null;
        clientContactNo: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    changeStatus(id: number, updateBookingDto: UpdateBookingDto, user: any): Promise<{
        car: {
            id: number;
            name: string;
            ownerId: number;
            carPicture: string | null;
            carPublished: Date;
            city: string | null;
            registrationNo: string | null;
            type: string | null;
            makeYear: string | null;
            capacity: number | null;
            Make: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            insured: boolean | null;
            rentPerDay: number | null;
            insuranceRequired: boolean | null;
            carTransmission: import(".prisma/client").$Enums.CarTransmission | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            createdAt: Date;
            updatedAt: Date;
        };
        driver: {
            id: number;
            userId: number;
            licenseNo: string;
            licenseExpiry: Date;
            licensePicture: string | null;
            lisenceType: string | null;
            driverPicture: string | null;
            averageRating: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            per12HoursRate: number | null;
            city: string | null;
            createdAt: Date;
            updatedAt: Date;
        };
        _count: {
            cancelledBy: number;
            client: number;
            car: number;
            driver: number;
            ratings: number;
        };
        cancelledBy: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        client: {
            id: number;
            fullName: string | null;
            email: string;
            password: string;
            isVerified: boolean;
            role: string;
            profilePicture: string | null;
            cnic: string | null;
            phone: string | null;
            dob: Date | null;
            otp: number | null;
            averageRatingGiven: Prisma.Decimal | null;
            ratingCount: number | null;
            weightage: Prisma.Decimal | null;
            cnicPhoto: string | null;
            isSignUpVerified: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        ratings: {
            id: number;
            ratedById: number;
            driverId: number | null;
            bookingId: number;
            carId: number;
            rating: Prisma.Decimal;
            review: string | null;
            createdAt: Date;
            updatedAt: Date;
        }[];
    } & {
        id: number;
        clientId: number;
        carId: number;
        driverId: number | null;
        status: import(".prisma/client").$Enums.BookingStatus;
        isInsured: boolean | null;
        insurance: string | null;
        bookingDate: Date;
        startDate: Date;
        endDate: Date;
        totalPrice: number;
        isPaid: boolean | null;
        amountPaid: number | null;
        cancelledAt: Date | null;
        cancelledById: number | null;
        clientContactNo: string | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    checkCarAvailability(carId: number, startDate: Date, endDate: Date): Promise<{
        available: boolean;
        bookings: {
            id: number;
            clientId: number;
            carId: number;
            driverId: number | null;
            status: import(".prisma/client").$Enums.BookingStatus;
            isInsured: boolean | null;
            insurance: string | null;
            bookingDate: Date;
            startDate: Date;
            endDate: Date;
            totalPrice: number;
            isPaid: boolean | null;
            amountPaid: number | null;
            cancelledAt: Date | null;
            cancelledById: number | null;
            clientContactNo: string | null;
            createdAt: Date;
            updatedAt: Date;
        }[];
    }>;
    checkDriverAvailability(driverId: number, startDate: Date, endDate: Date): Promise<{
        available: boolean;
        bookings: {
            id: number;
            clientId: number;
            carId: number;
            driverId: number | null;
            status: import(".prisma/client").$Enums.BookingStatus;
            isInsured: boolean | null;
            insurance: string | null;
            bookingDate: Date;
            startDate: Date;
            endDate: Date;
            totalPrice: number;
            isPaid: boolean | null;
            amountPaid: number | null;
            cancelledAt: Date | null;
            cancelledById: number | null;
            clientContactNo: string | null;
            createdAt: Date;
            updatedAt: Date;
        }[];
    }>;
}
